{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciogabriel/Documents/personal-projects/quizzgameadmin/src/pages/Login/index.js\",\n  _s = $RefreshSig$();\nimport Button from 'components/Button';\nimport CustomModal from 'components/CustomModal';\nimport Form from 'components/Form';\nimport TextField from 'components/TextField';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './Login.module.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [descripton, setDescription] = useState('');\n  const [token, setToken] = useState('');\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [messageModal, setMessageModal] = useState('');\n  const navigate = useNavigate();\n  const login = () => {\n    fetch('http://localhost:8080/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(login)\n    }).then(response => {\n      if (response.status == 200) {\n        navigate('/home');\n      } else {}\n      response.json();\n    }).then(data => {\n      console.log(data);\n      var formattedToken = JSON.stringify(data).substring(10, JSON.stringify(data).length - 2);\n      setToken(`Bearer ${formattedToken}`);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      submit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        changeValue: value => setDescription(value),\n        title: \"Nome de usu\\xE1rio\",\n        value: descripton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        changeValue: value => setDescription(value),\n        title: \"Senha\",\n        value: descripton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Login\"\n        // action={navigate('/questions')}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomModal, {\n      open: isOpenModal,\n      close: handleCloseModal,\n      success: success,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: messageModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"VgieSm1M/ehgCOtUgqRANu16WlM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","CustomModal","Form","TextField","useState","useNavigate","styles","Login","descripton","setDescription","token","setToken","isOpenModal","setIsOpenModal","messageModal","setMessageModal","navigate","login","fetch","method","headers","Accept","body","JSON","stringify","then","response","status","json","data","console","log","formattedToken","substring","length","handleSubmit","e","preventDefault","handleCloseModal","value","success"],"sources":["/Users/mauriciogabriel/Documents/personal-projects/quizzgameadmin/src/pages/Login/index.js"],"sourcesContent":["import Button from 'components/Button'\nimport CustomModal from 'components/CustomModal'\nimport Form from 'components/Form'\nimport TextField from 'components/TextField'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport styles from './Login.module.css'\n\nconst Login = () => {\n\n    const [descripton, setDescription] = useState('')\n    const [token, setToken] = useState('')\n    const [isOpenModal, setIsOpenModal] = useState(false)\n    const [messageModal, setMessageModal] = useState('')\n    \n    const navigate = useNavigate();\n\n    const login = () => {\n        fetch('http://localhost:8080/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            },\n            body: JSON.stringify(login)\n        })\n            .then((response) => {\n                if (response.status == 200) {\n                    navigate('/home');\n                }\n                else {\n\n                }\n                response.json()\n            })\n            .then(data => {\n                console.log(data)\n                var formattedToken = JSON.stringify(data).substring(10, JSON.stringify(data).length - 2)\n                setToken(`Bearer ${formattedToken}`)\n            })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n    }\n\n    const handleCloseModal = () => {\n        setIsOpenModal(false)\n    }\n\n    return (\n        <>\n            <Form submit={handleSubmit}>\n                <TextField\n                    changeValue={value => setDescription(value)}\n                    title='Nome de usuÃ¡rio'\n                    value={descripton} />\n                <TextField\n                    changeValue={value => setDescription(value)}\n                    title='Senha'\n                    value={descripton} />\n                <Button\n                    title='Login'\n                // action={navigate('/questions')}\n                />\n            </Form>\n            <CustomModal\n                open={isOpenModal}\n                close={handleCloseModal}\n                success={success}>\n                <h3>{messageModal}</h3>\n            </CustomModal>\n        </>\n    )\n}\n\nexport default Login"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AAAA;AAAA;AAEvC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAEhB,MAAM,CAACC,UAAU,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,KAAK,GAAG,MAAM;IAChBC,KAAK,CAAC,6BAA6B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE;MACZ,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;IAC9B,CAAC,CAAC,CACGQ,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,MAAM,IAAI,GAAG,EAAE;QACxBX,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,MACI,CAEL;MACAU,QAAQ,CAACE,IAAI,EAAE;IACnB,CAAC,CAAC,CACDH,IAAI,CAACI,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAIG,cAAc,GAAGT,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAACI,SAAS,CAAC,EAAE,EAAEV,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAACK,MAAM,GAAG,CAAC,CAAC;MACxFvB,QAAQ,CAAE,UAASqB,cAAe,EAAC,CAAC;IACxC,CAAC,CAAC;EACV,CAAC;EAED,MAAMG,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;EACtB,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC3BzB,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,IAAI;MAAC,MAAM,EAAEsB,YAAa;MAAA,wBACvB,QAAC,SAAS;QACN,WAAW,EAAEI,KAAK,IAAI9B,cAAc,CAAC8B,KAAK,CAAE;QAC5C,KAAK,EAAC,oBAAiB;QACvB,KAAK,EAAE/B;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACzB,QAAC,SAAS;QACN,WAAW,EAAE+B,KAAK,IAAI9B,cAAc,CAAC8B,KAAK,CAAE;QAC5C,KAAK,EAAC,OAAO;QACb,KAAK,EAAE/B;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACzB,QAAC,MAAM;QACH,KAAK,EAAC;QACV;MAAA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACC,eACP,QAAC,WAAW;MACR,IAAI,EAAEI,WAAY;MAClB,KAAK,EAAE0B,gBAAiB;MACxB,OAAO,EAAEE,OAAQ;MAAA,uBACjB;QAAA,UAAK1B;MAAY;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACb;EAAA,gBACf;AAEX,CAAC;AAAA,GAlEKP,KAAK;EAAA,QAOUF,WAAW;AAAA;AAAA,KAP1BE,KAAK;AAoEX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}