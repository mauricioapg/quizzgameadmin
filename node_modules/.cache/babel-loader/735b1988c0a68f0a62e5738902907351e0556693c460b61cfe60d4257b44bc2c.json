{"ast":null,"code":"var _jsxFileName = \"/Users/mauriciogabriel/Documents/personal-projects/quizzgameadmin/src/pages/Questions/index.js\",\n  _s = $RefreshSig$();\nimport styles from './Questions.module.css';\nimport { useEffect, useState } from 'react';\nimport QuestionCard from 'components/QuestionCard';\nimport TextField from 'components/TextField';\nimport DropDownList from 'components/DropDownList';\nimport TextFieldAdd from 'components/TextFieldAdd';\nimport Button from 'components/Button';\nimport Form from 'components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [level, setLevel] = useState('');\n  const [alternative, setAlternative] = useState('');\n  const [alternatives, setAlternatives] = useState([]);\n  const [answer, setAnswer] = useState([]);\n  const [questions, setQuestions] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [levels, setLevels] = useState([]);\n  let headers = new Headers();\n  headers.append('Authorization', 'Bearer ' + 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtYXVyaWNpb2FwYXJlY2lkb2dhYnJpZWxAZ21haWwuY29tIiwiZXhwIjoxNjcyNjA5Mjg1fQ.fet2uVlkTDHTXccFRiL16NXqXadg62pi5KoHBydiBkRxkNbsqq9Q-SGZqF2b8P5-0ye2siI2f8_p1ucfY-DDiw');\n  useEffect(() => {\n    fetch('https://62edd141a785760e676f8b55.mockapi.io/api/v1/questions', {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      setQuestions(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('https://62edd141a785760e676f8b55.mockapi.io/api/v1/categories', {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      setCategories(data);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('https://62edd141a785760e676f8b55.mockapi.io/api/v1/levels', {\n      method: 'GET',\n      headers: headers\n    }).then(response => response.json()).then(data => {\n      setLevels(data);\n    });\n  }, []);\n  const createQuestion = () => {\n    return fetch(\"https://62edd141a785760e676f8b55.mockapi.io/api/v1/questions\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        idCategory: category,\n        idLevel: level,\n        alternatives: alternatives,\n        answer: answer\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createQuestion();\n  };\n  const handleKeyDown = event => {\n    event.preventDefault();\n    if (event.key === 'Enter') {\n      console.log(event.key);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      title: \"Preencha os campos para criar a pergunta\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        changeValue: value => setTitle(value),\n        title: \"T\\xEDtulo\",\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownList, {\n        value: category,\n        changeValue: value => setCategory(value),\n        category: \"Categoria\",\n        items: categories.map(category => category.desc)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownList, {\n        value: level,\n        changeValue: value => setLevel(value),\n        category: \"N\\xEDvel\",\n        items: levels.map(level => level.desc)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Alternativa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: props.value,\n        onChange: changeValue,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAlternative,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), alternatives.map(alternative => {\n        /*#__PURE__*/_jsxDEV(\"label\", {\n          children: alternative\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(TextField, {\n        changeValue: value => setAnswer(value),\n        title: \"Resposta\",\n        value: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        action: handleSubmit,\n        title: \"Criar Pergunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questionList,\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cards,\n        children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n          title: question.title,\n          alternatives: question.alternatives\n        }, question, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Questions, \"uphDkEU8F47IZzZYW3Vt4iA5QLM=\");\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["styles","useEffect","useState","QuestionCard","TextField","DropDownList","TextFieldAdd","Button","Form","Questions","title","setTitle","category","setCategory","level","setLevel","alternative","setAlternative","alternatives","setAlternatives","answer","setAnswer","questions","setQuestions","categories","setCategories","levels","setLevels","headers","Headers","append","fetch","method","then","response","json","data","createQuestion","body","JSON","stringify","idCategory","idLevel","console","log","handleSubmit","e","preventDefault","handleKeyDown","event","key","value","map","desc","props","changeValue","addAlternative","children","questionList","question","cards"],"sources":["/Users/mauriciogabriel/Documents/personal-projects/quizzgameadmin/src/pages/Questions/index.js"],"sourcesContent":["import styles from './Questions.module.css'\nimport { useEffect, useState } from 'react'\nimport QuestionCard from 'components/QuestionCard'\nimport TextField from 'components/TextField'\nimport DropDownList from 'components/DropDownList'\nimport TextFieldAdd from 'components/TextFieldAdd'\nimport Button from 'components/Button'\nimport Form from 'components/Form'\n\nconst Questions = () => {\n\n    const [title, setTitle] = useState('')\n    const [category, setCategory] = useState('')\n    const [level, setLevel] = useState('')\n    const [alternative, setAlternative] = useState('')\n    const [alternatives, setAlternatives] = useState([])\n    const [answer, setAnswer] = useState([])\n\n    const [questions, setQuestions] = useState([])\n    const [categories, setCategories] = useState([])\n    const [levels, setLevels] = useState([])\n\n    let headers = new Headers();\n\n    headers.append('Authorization', 'Bearer ' + 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJtYXVyaWNpb2FwYXJlY2lkb2dhYnJpZWxAZ21haWwuY29tIiwiZXhwIjoxNjcyNjA5Mjg1fQ.fet2uVlkTDHTXccFRiL16NXqXadg62pi5KoHBydiBkRxkNbsqq9Q-SGZqF2b8P5-0ye2siI2f8_p1ucfY-DDiw');\n\n    useEffect(() => {\n        fetch('https://62edd141a785760e676f8b55.mockapi.io/api/v1/questions', {\n            method: 'GET',\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                setQuestions(data)\n            })\n    }, [])\n\n    useEffect(() => {\n        fetch('https://62edd141a785760e676f8b55.mockapi.io/api/v1/categories', {\n            method: 'GET',\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                setCategories(data)\n            })\n    }, [])\n\n    useEffect(() => {\n        fetch('https://62edd141a785760e676f8b55.mockapi.io/api/v1/levels', {\n            method: 'GET',\n            headers: headers\n        })\n            .then(response => response.json())\n            .then(data => {\n                setLevels(data)\n            })\n    }, [])\n\n    const createQuestion = () => {\n        return fetch(\"https://62edd141a785760e676f8b55.mockapi.io/api/v1/questions\", {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                title: title,\n                idCategory: category,\n                idLevel: level,\n                alternatives: alternatives,\n                answer: answer,\n            })\n        }).then((response) => {\n            return response.json();\n        }).then(data => {\n            console.log(data)\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        createQuestion()\n    }\n\n    const handleKeyDown = (event) => {\n        event.preventDefault();\n        if (event.key === 'Enter') {\n            console.log(event.key)\n        }\n    }\n\n    return (\n        <div>\n            <Form title='Preencha os campos para criar a pergunta'>\n                <TextField\n                    changeValue={value => setTitle(value)}\n                    title='Título'\n                    value={title} />\n                <DropDownList\n                    value={category}\n                    changeValue={value => setCategory(value)}\n                    category='Categoria'\n                    items={categories.map(category => category.desc)} />\n                <DropDownList\n                    value={level}\n                    changeValue={value => setLevel(value)}\n                    category='Nível'\n                    items={levels.map(level => level.desc)} />\n                <label>Alternativa</label>\n                <input value={props.value} onChange={changeValue} className='input'></input>\n                <button onClick={addAlternative}>\n                    {props.children}\n                </button>\n                {/* <TextFieldAdd\n                    changeValue={value => setAlternative(value)}\n                    value={alternative}>\n                    <img src='/images/add.png' />\n                </TextFieldAdd> */}\n                {alternatives.map((alternative) => {\n                    <label>{alternative}</label>\n                })}\n                <TextField\n                    changeValue={value => setAnswer(value)}\n                    title='Resposta'\n                    value={answer} />\n                <Button action={handleSubmit} title='Criar Pergunta' />\n            </Form>\n            <div className={styles.questionList}>\n                {questions.map(\n                    question => <div className={styles.cards}>\n                        <QuestionCard\n                            key={question}\n                            title={question.title}\n                            alternatives={question.alternatives}\n                        />\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default Questions"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,iBAAiB;AAAA;AAElC,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAExC,IAAI0B,OAAO,GAAG,IAAIC,OAAO,EAAE;EAE3BD,OAAO,CAACE,MAAM,CAAC,eAAe,EAAE,SAAS,GAAG,gMAAgM,CAAC;EAE7O7B,SAAS,CAAC,MAAM;IACZ8B,KAAK,CAAC,8DAA8D,EAAE;MAClEC,MAAM,EAAE,KAAK;MACbJ,OAAO,EAAEA;IACb,CAAC,CAAC,CACGK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVb,YAAY,CAACa,IAAI,CAAC;IACtB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENnC,SAAS,CAAC,MAAM;IACZ8B,KAAK,CAAC,+DAA+D,EAAE;MACnEC,MAAM,EAAE,KAAK;MACbJ,OAAO,EAAEA;IACb,CAAC,CAAC,CACGK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVX,aAAa,CAACW,IAAI,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENnC,SAAS,CAAC,MAAM;IACZ8B,KAAK,CAAC,2DAA2D,EAAE;MAC/DC,MAAM,EAAE,KAAK;MACbJ,OAAO,EAAEA;IACb,CAAC,CAAC,CACGK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVT,SAAS,CAACS,IAAI,CAAC;IACnB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAG,MAAM;IACzB,OAAON,KAAK,CAAC,8DAA8D,EAAE;MACzEC,MAAM,EAAE,MAAM;MACdJ,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB9B,KAAK,EAAEA,KAAK;QACZ+B,UAAU,EAAE7B,QAAQ;QACpB8B,OAAO,EAAE5B,KAAK;QACdI,YAAY,EAAEA,YAAY;QAC1BE,MAAM,EAAEA;MACZ,CAAC;IACL,CAAC,CAAC,CAACa,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;IAC1B,CAAC,CAAC,CAACF,IAAI,CAACG,IAAI,IAAI;MACZO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBV,cAAc,EAAE;EACpB,CAAC;EAED,MAAMW,aAAa,GAAIC,KAAK,IAAK;IAC7BA,KAAK,CAACF,cAAc,EAAE;IACtB,IAAIE,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBP,OAAO,CAACC,GAAG,CAACK,KAAK,CAACC,GAAG,CAAC;IAC1B;EACJ,CAAC;EAED,oBACI;IAAA,wBACI,QAAC,IAAI;MAAC,KAAK,EAAC,0CAA0C;MAAA,wBAClD,QAAC,SAAS;QACN,WAAW,EAAEC,KAAK,IAAIxC,QAAQ,CAACwC,KAAK,CAAE;QACtC,KAAK,EAAC,WAAQ;QACd,KAAK,EAAEzC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACpB,QAAC,YAAY;QACT,KAAK,EAAEE,QAAS;QAChB,WAAW,EAAEuC,KAAK,IAAItC,WAAW,CAACsC,KAAK,CAAE;QACzC,QAAQ,EAAC,WAAW;QACpB,KAAK,EAAE3B,UAAU,CAAC4B,GAAG,CAACxC,QAAQ,IAAIA,QAAQ,CAACyC,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACxD,QAAC,YAAY;QACT,KAAK,EAAEvC,KAAM;QACb,WAAW,EAAEqC,KAAK,IAAIpC,QAAQ,CAACoC,KAAK,CAAE;QACtC,QAAQ,EAAC,UAAO;QAChB,KAAK,EAAEzB,MAAM,CAAC0B,GAAG,CAACtC,KAAK,IAAIA,KAAK,CAACuC,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAC9C;QAAA,UAAO;MAAW;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC1B;QAAO,KAAK,EAAEC,KAAK,CAACH,KAAM;QAAC,QAAQ,EAAEI,WAAY;QAAC,SAAS,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eAC5E;QAAQ,OAAO,EAAEC,cAAe;QAAA,UAC3BF,KAAK,CAACG;MAAQ;QAAA;QAAA;QAAA;MAAA,QACV,EAMRvC,YAAY,CAACkC,GAAG,CAAEpC,WAAW,IAAK;QAC/B;UAAA,UAAQA;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS;MAChC,CAAC,CAAC,eACF,QAAC,SAAS;QACN,WAAW,EAAEmC,KAAK,IAAI9B,SAAS,CAAC8B,KAAK,CAAE;QACvC,KAAK,EAAC,UAAU;QAChB,KAAK,EAAE/B;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,MAAM;QAAC,MAAM,EAAEyB,YAAa;QAAC,KAAK,EAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD,eACP;MAAK,SAAS,EAAE7C,MAAM,CAAC0D,YAAa;MAAA,UAC/BpC,SAAS,CAAC8B,GAAG,CACVO,QAAQ,iBAAI;QAAK,SAAS,EAAE3D,MAAM,CAAC4D,KAAM;QAAA,uBACrC,QAAC,YAAY;UAET,KAAK,EAAED,QAAQ,CAACjD,KAAM;UACtB,YAAY,EAAEiD,QAAQ,CAACzC;QAAa,GAF/ByC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAGf;QAAA;QAAA;QAAA;MAAA,QACA;IACT;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAjIKlD,SAAS;AAAA,KAATA,SAAS;AAmIf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}